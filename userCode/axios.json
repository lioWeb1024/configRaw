{
    "Print to console": {
        "scope": "javascript,typescript",
        "prefix": "http_axios",
        "body": [
            "import axios from 'axios'",

            "let service = axios.create({",
            "    baseURL: '/',",
            "})",
            "",
            "service.interceptors.request.use(",
            "    config => {",
            "        //http request 拦截器",
            "        config.data = JSON.stringify(config.data)",
            "        config.headers = {",
            "            'Content-Type': 'application/json',",
            "        }",
            "        return config",
            "    },",
            "    error => Promise.reject(error)",
            ")",
            "",
            "service.interceptors.response.use(response => {",
            "    //http response 拦截器",
            "    switch (response?.data?.code) {",
            "        case 200:",
            "            break",
            "        default:",
            "            break",
            "    }",
            "    return response.data",
            "})",
            "",
            "const http = (fetch, url, data) => {",
            "    //统一接口处理，返回数据",
            "    let params = {",
            "        get: { params: data },",
            "        post: data,",
            "    }",
            "    if (!/(get|post)/.test(fetch)) throw new Error('接口请求方式出错,请使用 get|post')",
            "    return new Promise((resolve, reject) => {",
            "        service[fetch](url, params[fetch])",
            "            .then(response => {",
            "                resolve(response)",
            "            })",
            "            .catch(error => reject(error))",
            "    })",
            "}",
            "export default http"
        ],
        "description": "Axios封装"
    }
}
